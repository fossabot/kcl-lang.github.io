"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"2022-kcl-0.4.4-release-blog","metadata":{"permalink":"/blog/2022-kcl-0.4.4-release-blog","editUrl":"https://github.com/KusionStack/kcl-lang.io/blob/main/blog/2022-12-06-kcl-0.4.4-release-blog/index.md","source":"@site/blog/2022-12-06-kcl-0.4.4-release-blog/index.md","title":"KCL v0.4.4 Release Blog - Customize manifest output, Python SDK, size and error optimization","description":"The KCL team is pleased to announce that v0.4.4 is now available! This release mainly adds the ability to customize YAML manifests output for KCL. Users can customize the style of YAML output by writing code and calling system functions without understanding the complex schema settings semantics. In addition, this release provides the latest KCL Python SDK, which can be used for Python users to directly integrate KCL. At the same time, we have greatly reduced the size of the KCL installation package. The average installation package size has been reduced to one-fifth of that of the previous version. It also includes a number of compiler error message optimization and bug fix. You can visit the KCL release page to get more detailed release information and KCL binary download link.","date":"2022-12-06T00:00:00.000Z","formattedDate":"December 6, 2022","tags":[{"label":"Release Blog","permalink":"/blog/tags/release-blog"},{"label":"KCL","permalink":"/blog/tags/kcl"},{"label":"KusionStack","permalink":"/blog/tags/kusion-stack"},{"label":"Kusion","permalink":"/blog/tags/kusion"}],"readingTime":6.32,"truncated":false,"authors":[{"name":"KCL Team","title":"KCL Team"}],"frontMatter":{"slug":"2022-kcl-0.4.4-release-blog","title":"KCL v0.4.4 Release Blog - Customize manifest output, Python SDK, size and error optimization","authors":{"name":"KCL Team","title":"KCL Team"},"tags":["Release Blog","KCL","KusionStack","Kusion"]},"nextItem":{"title":"KusionStack Open Day","permalink":"/blog/2022-open-day"}},"content":"The KCL team is pleased to announce that v0.4.4 is now available! This release mainly adds the ability to customize YAML manifests output for KCL. Users can customize the style of YAML output by writing code and calling system functions without understanding the complex schema settings semantics. In addition, this release provides the latest [KCL Python SDK](https://github.com/KusionStack/kclvm-py), which can be used for Python users to directly integrate KCL. At the same time, we have greatly reduced the size of the KCL installation package. The average installation package size has been reduced to one-fifth of that of the previous version. It also includes a number of compiler error message optimization and bug fix. You can visit the [KCL release page](https://github.com/KusionStack/KCLVM/releases/tag/v0.4.4-alpha.2) to get more detailed release information and KCL binary download link.\\n\\n## Background\\n\\nKCL is an open-source constraint-based record and functional language. KCL improves the writing of a large number of complex configurations through mature programming language technology and practice, and is committed to building better modularity, scalability and stability around configuration, simpler logic writing, fast automation and good ecological extensionality.\\n\\nThis blog will introduce the recent developments of KCL community to readers.\\n\\n## Features\\n\\n### Customize YAML Manifest Output\\n\\nIn previous KCL versions, the style of YAML output is hard coded in the KCL compiler, and users can set the `__settings__` meta attribute with different values to determine the YAML output style, which brings high complexity. Therefore, in version 0.4.4, we provide a system module function for developers to easily customize the YAML output style. The signature of this function is as follows:\\n\\n```python\\nmanifests.yaml_stream(values: [any], opts: {str:} = {\\n    sort_keys = False\\n    ignore_private = True\\n    ignore_none = False\\n    sep = \\"---\\"\\n})\\n```\\n\\nThis function is used to serialize the KCL object list into YAML output with the `---` separator. It has two parameters:\\n\\n+ `values` - A list of KCL objects\\n+ `opts` - The YAML serialization options\\n  + `sort_keys`: Whether to sort the serialized results in the dictionary order of attribute names (the default is `False`).\\n  + `ignore_private`: Whether to ignore the attribute output whose name starts with the character `_` (the default value is `True`).\\n  + `ignore_none`: Whether to ignore the attribute with the value of\' None \'(the default value is `False`).\\n  + `sep`: Set the separator between multiple YAML documents (the default value is `\\"---\\"`).\\n\\nHere\'s an example:\\n\\n```python\\nimport manifests\\n\\nschema Deployment:\\n    apiVersion: str = \\"v1\\"\\n    kind: str = \\"Deployment\\"\\n    metadata: {str:} = {\\n        name = \\"deploy\\"\\n    }\\n    spec: {str:} = {\\n        replica = 2\\n    }\\n\\nschema Service:\\n    apiVersion: str = \\"v1\\"\\n    kind: str = \\"Service\\"\\n    metadata: {str:} = {\\n         name = \\"svc\\"\\n    }\\n    spec: {str:} = {}    \\n        \\ndeployments = [Deployment {}, Deployment {}]\\nservices = [Service {}, Service {}]\\n\\nmanifests.yaml_stream(deployments + services)\\n```\\n\\nFirst, we use the `import` keyword to import the `manifests` module and define two deployment resources and two service resources. When we want to output these four resources in YAML stream format with `---` as the separator, we can put them into a KCL list and use the `manifests.yaml_stream` function pass it to the `values` parameter (if there is no special requirement, the `opts` parameter can generally use the default value). Finally, the YAML output is:\\n\\n```yaml\\napiVersion: v1\\nkind: Deployment\\nmetadata:\\n  name: deploy\\nspec:\\n  replica: 2\\n---\\napiVersion: v1\\nkind: Deployment\\nmetadata:\\n  name: deploy\\nspec:\\n  replica: 2\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: svc\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: svc\\n```\\n\\n> Note: The feature of schema `__settings__` meta attribute setting YAML output style can still be used in v0.4.4. We will remove this feature in KCL v0.4.6 after the next two minor versions are released.\\n\\nFor more information, see [https://github.com/KusionStack/KCLVM/issues/94](https://github.com/KusionStack/KCLVM/issues/94).\\n\\n### Python SDK\\n\\nIn addition to the existing [KCL Go SDK](https://github.com/KusionStack/kclvm-go), this release also adds the KCL Python SDK. Using the Python SDK requires that you have a local Python version higher than 3.7.3 and a local pip package management tool. You can use the following command to install and obtain helpful information.\\n\\n```cmd\\n$ python3 -m pip install kclvm && python3 -m kclvm --help\\n```\\n\\n#### Command Line Tool\\n\\nPrepare a KCL file named `main.k`\\n\\n```python\\nname = \\"kcl\\"\\nage = 1\\n\\nschema Person:\\n    name: str = \\"kcl\\"\\n    age: int = 1\\n\\nx0 = Person {}\\nx1 = Person {\\n    age = 101\\n}\\n```\\n\\nExecute the following command and get the output:\\n\\n```cmd\\n$ python3 -m kclvm hello.k\\nname: kcl\\nage: 1\\nx0:\\n  name: kcl\\n  age: 1\\nx1:\\n  name: kcl\\n  age: 101\\n```\\n\\n#### API\\n\\nIn addition, we can also execute KCL files through Python code.\\n\\nPrepare a KCL file named `main.py`\\n\\n```python\\nimport kclvm.program.exec as kclvm_exec\\nimport kclvm.vm.planner as planner\\n\\nprint(planner.plan(kclvm_exec.Run([\\"hello.k\\"]).filter_by_path_selector()))\\n```\\n\\nExecute the following command and get the output:\\n\\n```cmd\\n$ python3 main.py\\nname: kcl\\nage: 1\\nx0:\\n  name: kcl\\n  age: 1\\nx1:\\n  name: kcl\\n  age: 101\\n```\\n\\nYou can see that the same output can be obtained through command line tools and APIs.\\n\\nAt present, the KCL Python SDK is still in the early preview version. The KCL team will continue to update and provide more functions in the future. For more information, see [https://github.com/KusionStack/kclvm-py](https://github.com/KusionStack/kclvm-py)\\n\\n## Installation Size Optimization\\n\\nIn the new KCL version, we split the built-in Python 3 of KCL, reducing the average size of the KCL binary compression package from 200M to 35M. Users can download and use KCL faster, and the Python plugin becomes an option. If you want to enable the KCL Python plugin, an additional requirement is that you have Python and pip package management tools that are higher than 3.7.3. For more details, please see [https://github.com/KusionStack/kcl-plugin](https://github.com/KusionStack/kcl-plugin)\\n\\n## Bugfix\\n\\n### Function Call Error Information Optimization\\n\\nIn version 0.4.4, KCL optimizes the output of error messages when the number of function arguments does not match, and supports the display of function names and the number of argument mismatches\\n\\n```python\\nschema Foo[x: int]:\\n    bar?: int = x\\n\\nf = lambda x {\\n    x + 1\\n}\\n\\nfoo = Foo(1,2,3)  # Error: \\"Foo\\" takes 1 positional argument but 3 were given\\nf(1,2)  # Error: \\"f\\" takes 1 positional argument but 2 were given\\n```\\n\\nFor more information, see [https://github.com/KusionStack/KCLVM/issues/299](https://github.com/KusionStack/KCLVM/issues/299)\\n\\n### Formatting Error of Interpolated Three Quote String\\n\\nIn previous KCL versions, formatting the following code would incorrectly convert the three quotation marks with string interpolation into single quotation marks and cause compilation errors. In version 0.4.4, we fixed the issue.\\n\\n```python\\n# Before KCL v0.4.4, variable \\"bar\\" will be formatted as:\\n#\\n# foo = 1\\n# bar = \\"\\n# ${foo}\\n# \\"\\nfoo = 1\\nbar = \\"\\"\\"\\n${foo}\\n\\"\\"\\"\\n```\\n\\nFor more information, see [https://github.com/KusionStack/KCLVM/issues/294](https://github.com/KusionStack/KCLVM/issues/294)\\n\\n### Other Issues\\n\\nFor more issues, see [https://github.com/KusionStack/KCLVM/milestone/2?closed=1](https://github.com/KusionStack/KCLVM/milestone/2?closed=1)\\n\\n## Documents\\n\\n[KCL website](https://kcl-lang.github.io/) preliminary establishment and improvement of Kubernetes scenarios [related documents](https://kcl-lang.github.io/docs/user_docs/guides/working-with-k8s/).\\n\\nFor more information, see [https://kcl-lang.github.io/](https://kcl-lang.github.io/)\\n\\n## Community\\n\\nThree external contributors @my-vegetable-has-exploded, @possible-fqz, @orangebees have participated in the KCL community, thank them for their enthusiasm and active participation in contributing.\\n\\n## Next\\n\\nIt is estimated that by the end of January 2023, we will release KCL v0.4.5, and the key evolution is expected to include\\n\\n+ Continuous optimization of the KCL user interface, improvement of experience and user pain points.\\n+ More scenarios and ecology integration, such as Kubernetes and CI/CD Pipeline scenarios.\\n+ KCL Windows version support.\\n+ KCL package management tool `kpm` release.\\n+ The new version of KCL playground.\\n\\nFor more information, see [KCL v0.4.5 Milestone](https://github.com/KusionStack/KCLVM/milestone/3).\\n\\n## FAQ\\n\\nFor more information, see [https://kcl-lang.github.io/docs/user_docs/support/](https://kcl-lang.github.io/docs/user_docs/support/).\\n\\n## Additional Resources\\n\\n+ [KCL Website](https://kcl-lang.github.io/)\\n+ [Kusion Website](https://kusionstack.io/)\\n+ [KCL Repo](https://github.com/KusionStack/KCLVM)\\n+ [Kusion Repo](https://github.com/KusionStack/kusion)\\n+ [Konfig Repo](https://github.com/KusionStack/konfig)\\n\\nSee the [community](https://github.com/KusionStack/community) for ways to join us. \ud83d\udc4f\ud83d\udc4f\ud83d\udc4f"},{"id":"2022-open-day","metadata":{"permalink":"/blog/2022-open-day","editUrl":"https://github.com/KusionStack/kcl-lang.io/blob/main/blog/2022-05-28-open-day/index.md","source":"@site/blog/2022-05-28-open-day/index.md","title":"KusionStack Open Day","description":"2022 \u5e74 5 \u6708 28 \u65e5\uff0cKusionStack Open Day \u7ebf\u4e0a\u7ebf\u4e0b\u89c6\u9891\u76f4\u64ad\u6b63\u5f0f\u5ba3\u5e03 KusionStack \u4e00\u7ad9\u5f0f\u53ef\u7f16\u7a0b\u914d\u7f6e\u6280\u672f\u6808\uff08\u5305\u542b KCL \u914d\u7f6e\u8bed\u8a00\u3001Kusion \u5f15\u64ce\u3001Konfig \u914d\u7f6e\u5927\u5e93\uff09\u5f00\u6e90\u3002","date":"2022-05-28T00:00:00.000Z","formattedDate":"May 28, 2022","tags":[{"label":"KusionStack","permalink":"/blog/tags/kusion-stack"},{"label":"Kusion","permalink":"/blog/tags/kusion"},{"label":"KCL","permalink":"/blog/tags/kcl"}],"readingTime":7.015,"truncated":false,"authors":[{"name":"KCL","title":"KCL \u56e2\u961f\u6210\u5458"}],"frontMatter":{"slug":"2022-open-day","title":"KusionStack Open Day","authors":{"name":"KCL","title":"KCL \u56e2\u961f\u6210\u5458"},"tags":["KusionStack","Kusion","KCL"]},"prevItem":{"title":"KCL v0.4.4 Release Blog - Customize manifest output, Python SDK, size and error optimization","permalink":"/blog/2022-kcl-0.4.4-release-blog"},"nextItem":{"title":"KCL\u4e91\u539f\u751f\u914d\u7f6e\u7b56\u7565\u8bed\u8a00","permalink":"/blog/2021-kcl-intro"}},"content":"2022 \u5e74 5 \u6708 28 \u65e5\uff0cKusionStack Open Day \u7ebf\u4e0a\u7ebf\u4e0b\u89c6\u9891\u76f4\u64ad\u6b63\u5f0f\u5ba3\u5e03 KusionStack \u4e00\u7ad9\u5f0f\u53ef\u7f16\u7a0b\u914d\u7f6e\u6280\u672f\u6808\uff08\u5305\u542b KCL \u914d\u7f6e\u8bed\u8a00\u3001Kusion \u5f15\u64ce\u3001Konfig \u914d\u7f6e\u5927\u5e93\uff09\u5f00\u6e90\u3002\\n\\n![](/img/blog/2022-05-28-open-day/01.jpg) \\n\\n\u4ee5\u4e0a\u662f KusionStack \u676d\u5dde\u56e2\u961f\u5408\u5f71\u3002\u81f3\u6b64\uff0c\ud83c\udf89KusionStack Open Day \u5706\u6ee1\u7ed3\u675f\ud83c\udf89\\n\\n## 1. \u7cbe\u5f69\u77ac\u95f4\\n\\n\u611f\u8c22\u5927\u5bb6\u62bd\u7a7a\u53c2\u52a0\uff0c\u6211\u4eec\u4e00\u8d77\u6765\u56de\u987e\u4e0b\ud83d\udc40\uff0c\u672c\u6b21\u6d3b\u52a8\u7684\u7cbe\u5f69\u77ac\u95f4\u5427\uff5e\ud83d\udc4f\\n\\n![](/img/blog/2022-05-28-open-day/02.jpg)\\n\\n\u8682\u8681\u96c6\u56e2\u9ad8\u7ea7\u6280\u672f\u4e13\u5bb6\u3001Kusion \u9879\u76ee\u53d1\u8d77\u4eba\u53ca\u8d1f\u8d23\u4eba\u2014\u2014\u6735\u6653\u4e1c\u4f5c\u4e3a\u6574\u573a\u6d3b\u52a8\u7684\u4e3b\u6301\u4eba\uff0c\u5e26\u9886\u5927\u5bb6\u4e00\u8d77\u56de\u987e\u4e86 Kusion \u9879\u76ee\u6f14\u8fdb\u5386\u7a0b\uff0c\u5e76\u5ba3\u5e03\u4e86 KusionStack \u6b63\u5f0f\u5f00\u6e90\u7684\u597d\u6d88\u606f\uff01\\n\\n![](/img/blog/2022-05-28-open-day/03.jpg)\\n\\n\u6d3b\u52a8\u5f00\u573a\uff0cKusion \u9879\u76ee\u7684\u4e24\u4f4d Sponsor\u2014\u2014\u8682\u8681\u96c6\u56e2\u53ef\u4fe1\u539f\u751f\u6280\u672f\u90e8\u8d1f\u8d23\u4eba\u4f55\u5f81\u5b87\u548c\u6280\u672f\u98ce\u9669\u90e8\u8d1f\u8d23\u4eba\u9648\u4eae\uff0c\u5bf9 Kusion \u4ece\u7814\u53d1\u81f3\u4eca\u7684\u53d1\u5c55\u56de\u987e\u548c\u672a\u6765\u5c55\u671b\u3002\u4e24\u4f4d Sponsor \u5728\u89c6\u9891\u4e2d\u7ed9\u4e88\u4e86 Kusion \u9879\u76ee\u6781\u5927\u7684\u8ba4\u53ef\uff0c\u5e76\u4e3a KusionStack \u7684\u5f00\u6e90\u732e\u4e0a\u4e86\u795d\u798f\u3002\\n\\n![](/img/blog/2022-05-28-open-day/04.jpg)\\n\\n\\nKata \u521b\u59cb\u4eba\u3001\u6728\u5170\u793e\u533a TOC \u2014\u2014 \u738b\u65ed\\n\\n\u738b\u65ed\u5728\u4f1a\u4e0a\u4e5f\u8868\u8fbe\u4e86\u5bf9 KusionStack \u5f00\u6e90\u7684\u559c\u60a6\u3002\u4ed6\u6307\u51fa\uff1a\u4e00\u4e2a\u9879\u76ee\u62ff\u51fa\u6765\u5f00\u6e90\u7684\u597d\u7684\u65f6\u673a\uff0c\u5e94\u5f53\u662f\u9879\u76ee\u8fd8\u5904\u5728\u672a\u5b8c\u5168\u6210\u719f\u7684\u9636\u6bb5\uff0c\u8fd9\u6837\u5728\u5f00\u6e90\u51fa\u6765\u4e4b\u540e\uff0c\u624d\u80fd\u591f\u901a\u8fc7\u5f00\u6e90\u793e\u533a\u7684\u5f00\u53d1\u8005\u4eec\uff0c\u4e00\u8d77\u63a8\u52a8\u9879\u76ee\u66f4\u597d\u7684\u53d1\u5c55\uff0c\u5f00\u6e90\u4e0d\u662f\u4e3a\u4e86\u79c0\u808c\u8089\u3002\\n\\n\u5728\u6700\u540e\uff0c\u4ed6\u518d\u6b21\u4e3a KusionStack \u7684\u5f00\u6e90\u9001\u4e0a\u4e86\u8bda\u631a\u7684\u795d\u798f\u3002\\n\\n\u63a5\u4e0b\u6765\u662f\u5404\u4f4d\u5609\u5bbe\u7684\u7cbe\u5f69\u5206\u4eab\uff0c\u4e00\u8d77\u6765\u56de\u987e\u4e00\u4e0b\u5427\uff5e\\n\\n## 2. \u300a\u6570\u5b57\u5316\u51fa\u6d77\u4e1a\u52a1\u7684 DevOps \u63a2\u7d22\u548c\u5b9e\u8df5\u300b\\n\\n![](/img/blog/2022-05-28-open-day/05.png)\\n\\n\u5f00\u573a\u6f14\u8bb2\u7684\u4f17\u5b89\u56fd\u9645\u79d1\u6280 Engineering \u8d1f\u8d23\u4eba\u674e\u6653\u857e\uff08Sherry Lee\uff09\uff0c\u4ecb\u7ecd\u4e86\u4f17\u5b89\u56fd\u9645 DevOps \u5728\u652f\u6301\u6570\u5b57\u5316\u51fa\u6d77\u4e1a\u52a1\u8fc7\u7a0b\u9047\u5230\u96be\u70b9\u548c\u5bf9\u5e94\u7684\u89e3\u51b3\u4e4b\u9053\u3002\\n\\n\u5979\u4ece\u6570\u5b57\u5316\u51fa\u6d77\u5bf9 DevOps \u5e26\u6765\u7684\u6311\u6218\u3001\u4f17\u5b89\u56fd\u9645 DevOps \u9047\u5230\u7684\u96be\u70b9\u548c\u89e3\u51b3\u65b9\u6848\u4ee5\u53ca DevOps \u5177\u4f53\u5b9e\u8df5\u6848\u4f8b\u5206\u4eab\u4e09\u4e2a\u65b9\u9762\u5c55\u5f00\u4e86\u5b9d\u8d35\u7684\u7ecf\u9a8c\u5206\u4eab\u3002\\n\\n\\n- PDF: [\u6570\u5b57\u5316\u51fa\u6d77\u4e1a\u52a1\u7684DevOps\u63a2\u7d22\u548c\u5b9e\u8df5](https://github.com/KusionStack/community/blob/main/2022/open-day/0-Sherry-Lee-\u6570\u5b57\u5316\u51fa\u6d77\u4e1a\u52a1\u7684DevOps\u63a2\u7d22\u548c\u5b9e\u8df5.pdf)\\n- Video(Bilibili): https://www.bilibili.com/video/BV1hr4y1x72a\\n- Video(YouTube): https://www.youtube.com/watch?v=tYDw__lBcYM\\n\\n## 3. \u300a\u8682\u8681\u96c6\u56e2\u89c4\u6a21\u5316 DevOps \u7684\u4ee3\u9645\u6f14\u8fdb\u63a2\u7d22\u300b\\n\\n![](/img/blog/2022-05-28-open-day/06.jpg)\\n\\n\\n\u8682\u8681\u96c6\u56e2\u9ad8\u7ea7\u6280\u672f\u4e13\u5bb6\u3001Kusion \u9879\u76ee\u53d1\u8d77\u4eba\u53ca\u8d1f\u8d23\u4eba\u2014\u2014\u6735\u6653\u4e1c\u5206\u4eab\u4e86 Kusion \u7684\u9879\u76ee\u80cc\u666f\u548c\u53d1\u5c55\u8fdb\u7a0b\uff0c\u540c\u65f6\u4ed6\u5ba3\u5e03 Kusion \u6b63\u5f0f\u5f00\u6e90\uff0c\u5e76\u5206\u4eab\u4e86\u5f00\u6e90\u8ba1\u5212\u3002\\n\\n\u76ee\u524d\uff0c\u57fa\u4e8e Kusion \u7684\u65b0\u4e00\u4ee3 PaaS \u4f53\u7cfb\u5df2\u9010\u6b65\u5e94\u7528\u5728\u8682\u8681\u4f17\u591a\u5185\u5916\u90e8\u573a\u666f\uff0c\u5728\u591a\u79cd\u8fd0\u7ef4\u573a\u666f\u8986\u76d6\u3001\u89c4\u6a21\u5316\u534f\u540c\u6548\u7387\u63d0\u5347\u3001\u591a\u4e3b\u4f53/\u7ad9\u70b9\u4ea4\u4ed8\u8fd0\u7ef4\u3001\u6280\u672f\u521b\u65b0\u8fd0\u7ef4\u6548\u7387\u63d0\u5347\u7b49\u591a\u65b9\u9762\u4f53\u7cfb\u51fa\u663e\u8457\u7684\u4f18\u52bf\u548c\u4ef7\u503c\u3002\\n\\n\\n- PDF: [\u8682\u8681\u96c6\u56e2\u89c4\u6a21\u5316 DevOps \u4ee3\u9645\u6f14\u8fdb\u63a2\u7d22](https://github.com/KusionStack/community/blob/main/2022/open-day/1-\u6735\u6653\u4e1c-\u8682\u8681\u96c6\u56e2\u89c4\u6a21\u5316DevOps\u4ee3\u9645\u6f14\u8fdb\u63a2\u7d22.pdf)\\n- Video(Bilibili): https://www.bilibili.com/video/BV1WZ4y147pC\\n- Video(YouTube): https://www.youtube.com/watch?v=T6NKkb1L1eM\\n\\n\\n## 4. \u300aKCL \u914d\u7f6e\u7b56\u7565\u8bed\u8a00\u300b\\n\\n![](/img/blog/2022-05-28-open-day/07.jpg)\\n\\n\u8682\u8681\u96c6\u56e2\u9ad8\u7ea7\u7814\u53d1\u5de5\u7a0b\u5e08\u5f90\u9e4f\u98de\u4ecb\u7ecd\u4e86 KCL \u7684\u76f8\u5173\u6838\u5fc3\u7279\u6027\uff0c\u5206\u4eab\u4e86 KCL \u6280\u672f\u6808\u7684\u601d\u8def\u3001\u67b6\u6784\u3001\u5173\u952e\u6280\u672f\uff0c\u5e76\u5c55\u5f00\u8bb2\u8ff0\u4e86 KCL \u7684\u5728\u8682\u8681\u5185\u90e8\u591a\u573a\u666f\u7684\u5b9e\u8df5\u7ecf\u5386\u3002\\n\\nKCL \u5e2e\u52a9\u4e0d\u540c\u89d2\u8272\u7684\u7528\u6237\u4ee5\u7b80\u5355\u3001\u53ef\u6269\u5c55\u3001\u7a33\u5b9a\u3001\u9ad8\u6548\u3001\u5206\u800c\u6cbb\u4e4b\u7684\u65b9\u5f0f\u5b8c\u6210\u5f00\u53d1\u548c\u8fd0\u7ef4\u4efb\u52a1\uff0c\u540c\u65f6\u652f\u6301\u4e0e\u81ea\u52a8\u5316\u7cfb\u7edf\u96c6\u6210\uff0c\u5b9e\u73b0\u6781\u81f4\u7684\u6267\u884c\u6548\u7387\u3002\\n\\n- PDF: [KCL\u914d\u7f6e\u7b56\u7565\u8bed\u8a00](https://github.com/KusionStack/community/blob/main/2022/open-day/2-\u5f90\u9e4f\u98de-KCL\u914d\u7f6e\u7b56\u7565\u8bed\u8a00.pdf)\\n- Video(Bilibili): https://www.bilibili.com/video/BV1bv4y1w7ke\\n- Video(YouTube): https://www.youtube.com/watch?v=mUFFri_eRAQ\\n\\n## 5. \u4e2d\u573a\u4f11\u606f\\n\\n![](/img/blog/2022-05-28-open-day/08.jpg) \\n\\n\u4e2d\u573a\u4f11\u606f\u671f\u95f4\uff0c\u201c\u5f00\u6e90\u8001\u5175\u201d\u3001Go \u8bed\u8a00\u5927\u4f6c\u2014\u2014\u67f4\u6811\u6749\u8001\u5e08\u6d45\u8c08\u4e86\u4ed6\u53c2\u4e0e KusionStack \u7684\u5fc3\u8def\u5386\u7a0b\u548c\u4e2a\u4eba\u6536\u83b7\uff0c\u5e76\u8868\u8fbe\u4e86\u80fd\u6709\u66f4\u591a\u4f19\u4f34\u53c2\u4e0e\u5230 KusionStack \u7684\u5f00\u6e90\u5171\u5efa\u7684\u5e0c\u671b\u3002\\n\\n## 6. \u300aKusion \u6a21\u578b\u5e93\u548c\u5de5\u5177\u94fe\u7684\u5b9e\u8df5\u63a2\u7d22\u548c\u603b\u7ed3\u300b\\n\\n![](/img/blog/2022-05-28-open-day/09.jpg) \\n\\n\u8682\u8681\u96c6\u56e2\u9ad8\u7ea7\u7814\u53d1\u5de5\u7a0b\u5e08\u6768\u82f1\u660e\u4ee5\u5b9e\u9645\u7684\u6848\u4f8b\u4ecb\u7ecd\u4e86\u5982\u4f55\u901a\u8fc7 KCL \u62bd\u8c61 Kusion \u6a21\u578b\u5e93\uff0c\u4ee5\u53ca\u5982\u4f55\u7ed3\u5408 Kusion \u5de5\u5177\u94fe\u4e00\u7ad9\u5f0f\u7684\u5b8c\u6210\u914d\u7f6e\u4ee3\u7801\u7684\u7f16\u5199\u548c\u751f\u6548\uff0c\u540c\u65f6\u603b\u7ed3\u5206\u4eab\u4e86\u901a\u8fc7\u8fd9\u5957\u6a21\u5f0f\u8fdb\u884c\u5b9e\u9645\u4ea4\u4ed8\u7684\u7ecf\u9a8c\u548c\u5efa\u8bae\u3002\\n\\n\\n- PDF: [Kusion\u6a21\u578b\u5e93\u548c\u5de5\u5177\u94fe\u7684\u5b9e\u8df5\u63a2\u7d22\u548c\u603b\u7ed3](https://github.com/KusionStack/community/blob/main/2022/open-day/3-\u6768\u82f1\u660e-Kusion\u6a21\u578b\u5e93\u548c\u5de5\u5177\u94fe\u7684\u5b9e\u8df5\u63a2\u7d22\u548c\u603b\u7ed3.pdf)\\n- Video(Bilibili): https://www.bilibili.com/video/BV1Vr4y1x7Ty\\n- Video(YouTube): https://www.youtube.com/watch?v=HDUm_KrunLY\\n\\n## 7. \u300aKusion \u5728\u8682\u8681\u7684\u89c4\u6a21\u5316\u5b9e\u8df5\u300b\\n\\n![](/img/blog/2022-05-28-open-day/10.jpg) \\n\\n\u6700\u540e\uff0c\u8682\u8681\u96c6\u56e2\u6280\u672f\u4e13\u5bb6\u53f2\u8d35\u660e\u548c\u8682\u8681\u96c6\u56e2\u9ad8\u7ea7\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u674e\u6cbb\u73ae\u5171\u540c\u5e26\u6765\u4e86 Kusion \u5728\u8682\u8681\u7684\u89c4\u6a21\u5316\u5b9e\u8df5\u7684\u5206\u4eab\u3002\u53f2\u8d35\u660e\u4e3b\u8981\u4ece PaaS \u914d\u7f6e\u7ba1\u7406\u7684\u7cfb\u7edf\u67b6\u6784\u89d2\u5ea6\u8bb2\u8ff0\u4e86\u8682\u8681\u76ee\u524d\u7684\u591a\u4e91\u914d\u7f6e\u7ba1\u7406\u80fd\u529b\uff0c\u674e\u6cbb\u73ae\u5219\u4ece SRE \u89c6\u89d2\u4e0b\uff0c\u5206\u4eab\u4e86\u4f7f\u7528 KCL \u89e3\u51b3\u591a\u79cd\u590d\u6742\u57fa\u7840\u8bbe\u65bd\u7684\u4ea4\u4ed8\u6548\u7387\u95ee\u9898\u548c\u4ef7\u503c\u3002\\n\\n\\n- PDF: [Kusion\u5728\u8682\u8681\u7684\u89c4\u6a21\u5316\u63a2\u7d22\u5b9e\u8df5](https://github.com/KusionStack/community/blob/main/2022/open-day/4-\u83ab\u57ce-\u534a\u5ead-Kusion\u5728\u8682\u8681\u7684\u89c4\u6a21\u5316\u63a2\u7d22\u5b9e\u8df5.pdf)\\n- Video(Bilibili): https://www.bilibili.com/video/BV1xB4y1X7sv\\n- Video(YouTube): https://www.youtube.com/watch?v=F9lZEU5GNYE\\n\\n\\n## 8. \u672a\u6765\u5c55\u671b\\n\\n\u5f00\u6e90\u5e76\u4e0d\u4ee3\u8868 KusionStack \u5df2\u7ecf\u5b8c\u6210\uff0c\u76f8\u53cd\u6211\u4eec\u8fd8\u6709\u5f88\u591a\u9700\u8981\u5b8c\u5584\u548c\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u540c\u65f6\u5f00\u6e90\u793e\u533a\u548c\u6587\u5316\u4e5f\u5bf9\u6587\u6863\u548c\u4ee3\u7801\u63d0\u51fa\u4e86\u66f4\u9ad8\u7684\u8981\u6c42\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u5f00\u59cb\uff0c\u5e0c\u671b\u66f4\u591a\u4ece\u4e8b\u76f8\u5173\u9886\u57df\u7684\u540c\u5b66\u80fd\u591f\u53c2\u4e0e\u5171\u5efa\uff0c\u4e3a\u56fd\u5185\u7684\u4e91\u539f\u751f\u3001DSL \u7b49\u65b0\u5174\u9886\u57df\u8d21\u732e\u529b\u91cf\u3002\\n\\n\u6700\u540e\uff0c\u611f\u8c22\u5927\u5bb6\u7684\u53c2\u4e0e\ud83d\ude4f"},{"id":"2021-kcl-intro","metadata":{"permalink":"/blog/2021-kcl-intro","editUrl":"https://github.com/KusionStack/kcl-lang.io/blob/main/blog/2021-08-03-kcl-intro/index.md","source":"@site/blog/2021-08-03-kcl-intro/index.md","title":"KCL\u4e91\u539f\u751f\u914d\u7f6e\u7b56\u7565\u8bed\u8a00","description":"\u4ecb\u7ecdKCL\u4e91\u539f\u751f\u914d\u7f6e\u8bed\u8a00\u5728\u8682\u8681\u7684\u8bde\u751f\u80cc\u666f\u3001\u8bed\u8a00\u7279\u6027\u3001\u5b9e\u8df5\u63a2\u7d22\u548c\u672a\u6765\u7684\u53d1\u5c55\u601d\u8003\u3002","date":"2021-08-03T00:00:00.000Z","formattedDate":"August 3, 2021","tags":[{"label":"KCL","permalink":"/blog/tags/kcl"}],"readingTime":0.285,"truncated":false,"authors":[{"name":"\u67f4\u6811\u6749","title":"KCL \u56e2\u961f\u6210\u5458"}],"frontMatter":{"slug":"2021-kcl-intro","title":"KCL\u4e91\u539f\u751f\u914d\u7f6e\u7b56\u7565\u8bed\u8a00","authors":{"name":"\u67f4\u6811\u6749","title":"KCL \u56e2\u961f\u6210\u5458"},"tags":["KCL"]},"prevItem":{"title":"KusionStack Open Day","permalink":"/blog/2022-open-day"}},"content":"\u4ecb\u7ecdKCL\u4e91\u539f\u751f\u914d\u7f6e\u8bed\u8a00\u5728\u8682\u8681\u7684\u8bde\u751f\u80cc\u666f\u3001\u8bed\u8a00\u7279\u6027\u3001\u5b9e\u8df5\u63a2\u7d22\u548c\u672a\u6765\u7684\u53d1\u5c55\u601d\u8003\u3002\\n\\n- \u7b80\u4ecb\uff1ahttps://giac.msup.com.cn/course?id=15307\\n- \u5185\u5bb9\uff1ahttps://segmentfault.com/a/1190000040455559\\n- [PDF\u4e0b\u8f7d](https://gw.alipayobjects.com/os/bmw-prod/2cb0c283-5f24-485e-b635-b6efac887eba.pdf)\\n\\n[![KCL\u4e91\u539f\u751f\u914d\u7f6e\u7b56\u7565\u8bed\u8a00](/img/blog/2021-08-03-kcl-intro/talk-cover.png)](https://gw.alipayobjects.com/os/bmw-prod/2cb0c283-5f24-485e-b635-b6efac887eba.pdf)"}]}')}}]);