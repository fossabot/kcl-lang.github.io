"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[95856],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var l=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},o=Object.keys(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=l.createContext({}),c=function(e){var t=l.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return l.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),f=a,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||o;return n?l.createElement(m,r(r({ref:t},p),{},{components:n})):l.createElement(m,r({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,r[1]=i;for(var c=2;c<o;c++)r[c]=n[c];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}d.displayName="MDXCreateElement"},81931:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var l=n(87462),a=(n(67294),n(3905));const o={sidebar_position:1},r="Quick Start",i={unversionedId:"tools/cli/openapi/quick-start",id:"version-0.5.0/tools/cli/openapi/quick-start",title:"Quick Start",description:"1. Install KCLOpenAPI Tool",source:"@site/versioned_docs/version-0.5.0/tools/cli/openapi/quick-start.md",sourceDirName:"tools/cli/openapi",slug:"/tools/cli/openapi/quick-start",permalink:"/docs/tools/cli/openapi/quick-start",draft:!1,editUrl:"https://github.com/kcl-lang/kcl-lang.io/tree/main/versioned_docs/version-0.5.0/tools/cli/openapi/quick-start.md",tags:[],version:"0.5.0",lastUpdatedBy:"amy",lastUpdatedAt:1688961318,formattedLastUpdatedAt:"Jul 10, 2023",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tools",previous:{title:"OpenAPI Tools",permalink:"/docs/tools/cli/openapi/"},next:{title:"CRD to KCL",permalink:"/docs/tools/cli/openapi/crd-to-kcl"}},s={},c=[{value:"1. Install KCLOpenAPI Tool",id:"1-install-kclopenapi-tool",level:2},{value:"1.1 go install",id:"11-go-install",level:2},{value:"1.2 Curl|sh install (MacOS &amp; Linux)",id:"12-curlsh-install-macos--linux",level:2},{value:"1.3 Dowload from release",id:"13-dowload-from-release",level:2},{value:"1.4 Verify your installation",id:"14-verify-your-installation",level:2},{value:"2. Generate KCL Files",id:"2-generate-kcl-files",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,l.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quick-start"},"Quick Start"),(0,a.kt)("h2",{id:"1-install-kclopenapi-tool"},"1. Install KCLOpenAPI Tool"),(0,a.kt)("p",null,"The kcl-openapi tool can be installed in following ways:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#11-go-install"},"go install")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#12-curlsh-install-macos--linux"},"curl|sh install (MacOS & Linux)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#13-dowload-from-release"},"download from release"))),(0,a.kt)("h2",{id:"11-go-install"},"1.1 go install"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"go install kcl-lang.io/kcl-openapi@latest\n")),(0,a.kt)("h2",{id:"12-curlsh-install-macos--linux"},"1.2 Curl|sh install (MacOS & Linux)"),(0,a.kt)("p",null,"If you don't have go, you can install the CLI with this one-liner:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"curl https://kcl-lang.io/scripts/install-kcl-openapi.sh | sh\n")),(0,a.kt)("h2",{id:"13-dowload-from-release"},"1.3 Dowload from release"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'# 1. download the released binary from:\n# https://github.com/kcl-lang/kcl-openapi/releases\n\n# 2. Unzip the package and add the binary location to PATH\nexport PATH="<Your directory to store KCLOpenapi binary>:$PATH"\n')),(0,a.kt)("h2",{id:"14-verify-your-installation"},"1.4 Verify your installation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"To verify the installation, you can run the command: ",(0,a.kt)("inlineCode",{parentName:"li"},"kcl-openapi generate model -h")," and the following information indicates your successful installation:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kcl-openapi command helps you to generate KCL schema structure from K8s CRD YAML/JSON file.\n  1. Translate Swagger Openapi Spec to KCL code\n  2. Translate Kubernetes CRD to KCL code\n\nExamples:\n\n  # convert a K8s CRD file into KCL files\n  kcl-openapi generate model -f FILENAME --crd --skip-validation\n\nOptions:\n      --crd=false: Set the spec file is a kube crd\n  -f, --filename='': The filename to convert\n      --skip-validation=false: Skips validation of spec prior to generation\n  -t, --target='': The location to write output kcl files\n      --version=false: Show the KCLOpenAPI version\n\nUsage:\n  kcl-openapi generate model -f FILENAME [options]\n")),(0,a.kt)("h2",{id:"2-generate-kcl-files"},"2. Generate KCL Files"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/tools/cli/openapi/openapi-to-kcl"},"OpenAPI to KCL")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/tools/cli/openapi/crd-to-kcl"},"CRD to KCL"))))}u.isMDXComponent=!0}}]);