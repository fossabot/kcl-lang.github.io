"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[35717],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(a),g=r,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||o;return a?n.createElement(m,l(l({ref:t},c),{},{components:a})):n.createElement(m,l({ref:t},c))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},46040:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const o={id:"gitops-quick-start",sidebar_label:"Quick Start"},l="Quick Start",i={unversionedId:"user_docs/guides/gitops/gitops-quick-start",id:"user_docs/guides/gitops/gitops-quick-start",title:"Quick Start",description:"Introduction",source:"@site/docs/user_docs/guides/gitops/1-quick-start.md",sourceDirName:"user_docs/guides/gitops",slug:"/user_docs/guides/gitops/gitops-quick-start",permalink:"/zh-CN/docs/next/user_docs/guides/gitops/gitops-quick-start",draft:!1,editUrl:"https://github.com/KusionStack/kcl-lang.io/tree/main/docs/user_docs/guides/gitops/1-quick-start.md",tags:[],version:"current",lastUpdatedBy:"peefy",lastUpdatedAt:1688042622,formattedLastUpdatedAt:"2023\u5e746\u670829\u65e5",sidebarPosition:1,frontMatter:{id:"gitops-quick-start",sidebar_label:"Quick Start"},sidebar:"user_docs",previous:{title:"\u6700\u4f73\u5b9e\u8df5",permalink:"/zh-CN/docs/next/user_docs/guides/working-with-konfig/practice"},next:{title:"\u6838\u5fc3\u6982\u5ff5",permalink:"/zh-CN/docs/next/user_docs/concepts/"}},s={},p=[{value:"Introduction",id:"introduction",level:2},{value:"What is GitOps",id:"what-is-gitops",level:3},{value:"GitOps with KCL",id:"gitops-with-kcl",level:3},{value:"How to",id:"how-to",level:2},{value:"1. Get the Example",id:"1-get-the-example",level:3},{value:"2. Setup Config Repository",id:"2-setup-config-repository",level:3},{value:"3. Setup App Code Repository",id:"3-setup-app-code-repository",level:3},{value:"4. Install Kubernetes and GitOps Tool",id:"4-install-kubernetes-and-gitops-tool",level:3},{value:"Setup Kubernetes Cluster and ArgoCD Controllers",id:"setup-kubernetes-cluster-and-argocd-controllers",level:4},{value:"Setup ArgoCD CLI",id:"setup-argocd-cli",level:4},{value:"5. Modify App Code and Update Deployment Automatically",id:"5-modify-app-code-and-update-deployment-automatically",level:3},{value:"6. Rollback Changes",id:"6-rollback-changes",level:3},{value:"Summary",id:"summary",level:2},{value:"Reference",id:"reference",level:2}],c={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"quick-start"},"Quick Start"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("h3",{id:"what-is-gitops"},"What is GitOps"),(0,r.kt)("p",null,"GitOps is a modern way to do continuous delivery. Its core idea is to have a Git repository which contains environmental and application configurations. An automated process is also needed for sync the config to cluster."),(0,r.kt)("p",null,"By changing the files in repository, developers can apply the applications automatically. The benefits of applying GitOps include:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Increased productivity. Continuous delivery can speed up the time of deployment."),(0,r.kt)("li",{parentName:"ul"},"Lower the barrier for developer to deploy. By pushing code instead of container configuration, developers can easily deploy Kubernetes without knowing its internal implementation."),(0,r.kt)("li",{parentName:"ul"},"Trace the change records. Managing the cluster with Git makes every change traceable, enhancing the audit trail."),(0,r.kt)("li",{parentName:"ul"},"Recover the cluster with Git's rollback and branch.")),(0,r.kt)("h3",{id:"gitops-with-kcl"},"GitOps with KCL"),(0,r.kt)("p",null,"Benefits of Using KCL and ArgoCD Together:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"KCL can help us ",(0,r.kt)("strong",{parentName:"li"},"simplify complex Kubernetes deployment configuration files"),", reduce the error rate of manually writing YAML files, and improve code readability and maintainability."),(0,r.kt)("li",{parentName:"ul"},"ArgoCD can ",(0,r.kt)("strong",{parentName:"li"},"automate")," the deployment of Kubernetes applications, achieve continuous deployment, and provide comprehensive monitoring and control functions."),(0,r.kt)("li",{parentName:"ul"},"By combining KCL and ArgoCD, deployment efficiency can be improved, errors reduced, and management and monitoring of Kubernetes applications strengthened."),(0,r.kt)("li",{parentName:"ul"},"The combination of KCL and ArgoCD can also help us achieve ",(0,r.kt)("strong",{parentName:"li"},"Infrastructure as Code (IaC)"),", simplify application deployment and management, and better implement DevOps principles.")),(0,r.kt)("p",null,"With GitOps, developer and operation teams can manage application deployment and configuration by modifying KCL code and generating YAML files. The GitOps toolchain will automatically synchronize the changes to the Kubernetes cluster, enabling continuous deployment and ensuring consistency. If there are issues, the GitOps toolchain can be used to quickly rollback."),(0,r.kt)("h2",{id:"how-to"},"How to"),(0,r.kt)("h3",{id:"1-get-the-example"},"1. Get the Example"),(0,r.kt)("h3",{id:"2-setup-config-repository"},"2. Setup Config Repository"),(0,r.kt)("h3",{id:"3-setup-app-code-repository"},"3. Setup App Code Repository"),(0,r.kt)("h3",{id:"4-install-kubernetes-and-gitops-tool"},"4. Install Kubernetes and GitOps Tool"),(0,r.kt)("h4",{id:"setup-kubernetes-cluster-and-argocd-controllers"},"Setup Kubernetes Cluster and ArgoCD Controllers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/k3d-io/k3d"},"K3d")," to create a default cluster.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"k3d cluster delete mycluster && k3d cluster create mycluster\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install ",(0,r.kt)("a",{parentName:"li",href:"https://kwok.sigs.k8s.io/docs/user/installation/"},"Kwok"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"go install sigs.k8s.io/kwok/cmd/{kwok,kwokctl}@v0.2.0\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kwokctl create cluster --name=mycluster\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/argoproj/argo-cd/releases/"},"ArgoCD"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create namespace argocd\nkubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/v2.7.4/manifests/install.yaml\n# Local install\nkubectl apply -n argocd -f install.yaml\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Enable ArgoCD KCL Plugin")),(0,r.kt)("p",null,"Write the patch YAML configuration file and update the ArgoCD configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'cat <<EOF > kcl-cmp.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kcl-cmp\n  namespace: argocd\ndata:\n  plugin.yaml: |\n    apiVersion: argoproj.io/v1alpha1\n    kind: ConfigManagementPlugin\n    metadata:\n      name: kcl\n    spec:\n      version: v1.0\n      generate:\n        command: ["sh"]\n        args:\n          - -c\n          - kcl\nEOF\nkubectl apply -f kcl-cmp.yaml\nkubectl apply -f temp-cmp.yaml\n')),(0,r.kt)("p",null,"After completing the first step, ArgoCD will recognize the KCL plugin, but the KCL plugin has not been loaded into the ArgoCD image. To implement configuration drift detection, we have to tune the Deployment of argocd-repo-server."),(0,r.kt)("p",null,"Download ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/KusionStack/examples/blob/main/kusion/argo-cd/patch-argocd-repo-server.yaml"},"patch")," file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget -q https://raw.githubusercontent.com/KusionStack/kcl-lang.io/main/examples/kubernetes/argocd/patch-argocd-repo-server.yaml\n")),(0,r.kt)("p",null,"Update configuration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl -n argocd patch deploy/argocd-repo-server -p "$(cat patch-argocd-repo-server.yaml)"\n')),(0,r.kt)("p",null,"Wait for the init container to complete execution (Running)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pod -n argocd -l app.kubernetes.io/name=argocd-repo-server\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"To access the ArgoCD web UI")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl port-forward svc/argocd-server -n argocd 8080:443\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Open a browser and go to: ",(0,r.kt)("inlineCode",{parentName:"p"},"https://localhost:8080"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'The username is "admin" and password get be obtained from the following command:'))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d\n')),(0,r.kt)("h4",{id:"setup-argocd-cli"},"Setup ArgoCD CLI"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/argoproj/argo-cd/releases/download"},"ArgoCD CLI"))),(0,r.kt)("p",null,'Use "admin" and password to login to ArgoCD'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"argocd login localhost:8080\n")),(0,r.kt)("p",null,"Create ArgoCD Application"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"argocd app create guestbook \\\n--repo https://github.com/KusionStack/kcl-lang.io \\\n--path examples/gitops/config \\\n--dest-namespace default \\\n--dest-server https://kubernetes.default.svc \\\n--config-management-plugin my-plugin-v1.0\n")),(0,r.kt)("h3",{id:"5-modify-app-code-and-update-deployment-automatically"},"5. Modify App Code and Update Deployment Automatically"),(0,r.kt)("h3",{id:"6-rollback-changes"},"6. Rollback Changes"),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("p",null,"With GitOps, you can easily manage your applications and configuration in your Kubernetes cluster, ensuring that your applications are always in the desired state."),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://medium.com/cloud-native-daily/devops-in-argo-cd-installation-4b5bf028caa5"},"DevOps in Argo CD \u2014 Installation"))),(0,r.kt)("p",null,"kubectl exec -it argocd-repo-server-7c5bf6c475-ptsfk /bin/bash -n argocd -c 'argocd-repo-server'"))}u.isMDXComponent=!0}}]);